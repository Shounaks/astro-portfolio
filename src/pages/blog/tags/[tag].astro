---
import TagLayout from "../../../layouts/TagLayout.astro";
import { posts } from "../../../collection";
import { Image } from "astro:assets";

export async function getStaticPaths() {
	const tags = posts.map((item) => item.data.tags).flat();
	return tags.map((tag) => ({ params: { tag: tag } }));
}
const { tag } = Astro.params;

var tagColor;
switch (tag) {
	case "": tagColor = "border-white";break;
	case "Java": tagColor = "border-orange-500";break;
	case "System Design": tagColor = "border-purple-500";break;
	case "Leet Code": tagColor = "border-yellow-500";break;
	case "Algorithms": tagColor = "border-slate-200";break;
	case "cloud": tagColor = "border-blue-400";break;
	// case "AWS": tagColor = "border-blue-400";break;
	default: tagColor = "border-slate-500";break;
}
---

<TagLayout tagName={tag} {tagColor}>
	<!-- <p class="text-white p-2">Posts tagged with: <span class="text-black uppercase bg-gradient-to-r from-yellow-300 via-yellow-500 to-yellow-700 py-1 px-3 rounded-xl bg-no-repeat border-2 border-transparent hover:border-white">{tag}</span></p> -->
	<div class="p-2">
			{
				!["AWS"].includes(tag) ?
					<ul class="pl-5 flex flex-col flex-wrap h-[50em] gap-2">
					{posts
							.filter((post) => tag && post.data.tags.includes(tag))
							.sort((x,y)=> (x.data.order && y.data.order)? x.data.order - y.data.order : x.data.title.localeCompare(y.data.title))
							.map((post) => (
								<a
									data-astro-reload
									href={`/blog/${post.slug}/`}
									class="hover:underline decoration-slate-400 underline-offset-8 min-w-max inline-flex pb-4 mx-5 border-b-2 border-slate-700"
								>
									<img src=`${post.data.heroImage}` class="h-8 w-8 rounded-none" alt="">
									<li class="text-white pl-4"> {post.data.title}</li>
								</a>
							))}
					</ul>
					: <div class="grid gap-10 justify-between" style="grid-template-columns: repeat(auto-fit,minmax(250px,1fr));grid-template-rows: repeat(auto-fit,8em);">
							{
								posts
						.filter((post) => tag && post.data.tags.includes(tag))
						.sort((x,y)=> (x.data.order && y.data.order)? x.data.order - y.data.order : x.data.title.localeCompare(y.data.title))
						.map((post) => (
							<a
								href={`/blog/${post.slug}/`}
								class="hover:underline underline-offset-4 decoration-amber-500 row-span-1 col-span-1"
							>
								{post.data.heroImage 
									? (
										<>
											<img src=`${post.data.heroImage}` class="max-w-16 min-w-16 max-h-16 min-h-16 h-16 w-16 mx-auto bg-white" alt="">
											<div class="text-white max-w-32 min-w-full max-h-32 min-h-32 h-32  w-full text-clip pt-2 text-sm text-center">{post.data.title}</div>
										</>
									) : (
										<div class="text-white max-w-32 min-w-32 max-h-32 min-h-32 h-32  w-32 text-clip rounded-md p-2 text-sm">{post.data.title}</div>
									)
								}
							</a>
						))
							}
						</div>
			}
	</div>
</TagLayout>
