---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import NavigationBar from "../components/NavigationBar.astro";
import { fade } from "astro:transitions";
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<script
			src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.min.js"
			integrity="sha512-Kef5sc7gfTacR7TZKelcrRs15ipf7+t+n7Zh6mKNJbmW+/RRdCW9nwfLn4YX0s2nO6Kv5Y2ChqgIakaC6PW09A=="
			crossorigin="anonymous"
			referrerpolicy="no-referrer"></script>
	</head>
	<body class="flex flex-row overflow-x-visible">
		<NavigationBar />
		<main
			class="max-h-screen bg-[#1d232a] h-screen flex-grow"
			transition:animate="initial"
		>
			<div class="absolute inset-0 -z-50" id="particles-js"></div>
			<div
				class="overflow-y-auto max-w-none border-0 p-0 rounded-md min-h-full max-h-full flex"
			>
				<slot><span class="text-white">DEFAULT TEXT IN MAIN LAYOUT</span></slot>
			</div>
		</main>
		<script is:inline defer>
			var pathstring =
				"#" + window.document.location.pathname.replaceAll("/", "");
			var container =
				pathstring === "#"
					? document.querySelector("#home")
					: document.querySelector(pathstring);
			var containerColor =
				container && container.style && container.style.getPropertyValue("--bg")
					? container.style.getPropertyValue("--bg")
					: "#fff";

			/* ---- particles.js config ---- */
			function initializeParticles() {
				try {
					return particlesJS("particles-js", {
						particles: {
							number: {
								value: 50,
								density: {
									enable: true,
									value_area: 800,
								},
							},
							color: {
								value: containerColor, //"#ffffff",
							},
							shape: {
								type: "circle",
								stroke: {
									width: 0,
									color: "#ffffff",
								},
								polygon: {
									nb_sides: 5,
								},
								image: {
									src: "img/github.svg",
									width: 100,
									height: 100,
								},
							},
							opacity: {
								value: 0.2,
								random: false,
								anim: {
									enable: false,
									speed: 1,
									opacity_min: 0.1,
									sync: false,
								},
							},
							size: {
								value: 3,
								random: true,
								anim: {
									enable: false,
									speed: 40,
									size_min: 0.1,
									sync: false,
								},
							},
							line_linked: {
								enable: true,
								distance: 150,
								color: "#ffffff",
								opacity: 0.4,
								width: 1,
							},
							move: {
								enable: true,
								speed: 6,
								direction: "none",
								random: false,
								straight: false,
								out_mode: "out",
								bounce: true,
								attract: {
									enable: false,
									rotateX: 600,
									rotateY: 1200,
								},
							},
						},
						interactivity: {
							detect_on: "canvas",
							events: {
								onhover: {
									enable: true,
									mode: "grab",
								},
								onclick: {
									enable: true,
									mode: "push",
								},
								resize: true,
							},
							modes: {
								grab: {
									distance: 140,
									line_linked: {
										opacity: 1,
									},
								},
								bubble: {
									distance: 400,
									size: 40,
									duration: 2,
									opacity: 8,
									speed: 3,
								},
								repulse: {
									distance: 200,
									duration: 0.4,
								},
								push: {
									particles_nb: 4,
								},
								remove: {
									particles_nb: 2,
								},
							},
						},
						retina_detect: true,
					});
				} catch (error) {
					console.info("ParticleJS Cannot be initialized for this view...");
				}
			}
			document.addEventListener("astro:after-swap", initializeParticles);
			initializeParticles();
		</script>
		<!-- Script to store thestate of navbar -->
		<script is:inline defer>
			console.log("Loading Navbar State");
			let navName = "s-nav";
			let menuToggle = document.querySelector(".menuToggle");
			let sidebar = document.querySelector(".sidebar");
			let isOpen = localStorage.getItem(navName);

			function changeNavbarState(skip) {
				console.log("Clicked Navbar toggle...");
				let state = menuToggle.classList.toggle("active");
				sidebar.classList.toggle("active");
				localStorage.setItem(navName, state.toString());
			}
			document.addEventListener(
				"astro:page-load",
				() => {
					console.log("Adding Event Listener post page loading");

					document.querySelector(".menuToggle").addEventListener("click", changeNavbarState);
				},
				{ once: true }
			);
			document.addEventListener(
				"astro:after-swap",
				() => {
					menuToggle.addEventListener("click", changeNavbarState);
				},
				{ once: true }
			);

			function persistNavbarState() {
				if (isOpen === null) {
					localStorage.setItem(navName, "false");
				} else {
					if (isOpen === "true") {
						menuToggle.classList.add("active");
						sidebar.classList.add("active");
					} else if (isOpen === "false") {
						menuToggle.classList.remove("active");
						sidebar.classList.remove("active");
					}
				}
			}
			document.addEventListener("astro:page-load", persistNavbarState, {
				once: true,
			});
			persistNavbarState();
		</script>
	</body>
</html>
